@model LmsTool.Models.Viewmodels.CreateActivity

@{
    ViewBag.Title = "Create";
}

<h2>Skapa en aktivitet för @Html.DisplayFor(model => model.ModulName)</h2>
<h3>Som pågår mellan @Html.DisplayFor(model => model.DisplayModulStart) - @Html.DisplayFor(model => model.DisplayModulEnd)</h3>


@using (Ajax.BeginForm("Create", "activity", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalCreate", OnSuccess = "$('close').click()" }, new { id = Model.ModulId }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfActivity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeOfActivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfActivity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Submission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Submission)
                    @Html.ValidationMessageFor(model => model.Submission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityStart, new { htmlAttributes = new { @class = "form-control" } }) 
                @Html.ValidationMessageFor(model => model.ActivityStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActivityEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           @Html.HiddenFor(model => model.ModulId)
            @Html.ValidationMessageFor(model => model.ModulId, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ModulStart)
            @Html.ValidationMessageFor(model => model.ModulStart, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ModulEnd)
            @Html.ValidationMessageFor(model => model.ModulEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Skapa" class="btn btn-default" />
            </div>
        </div>
    
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $('.modal').on('hidden.bs.modal', function () {
        $(this).removeData('bs.modal').children('.modal-content').html('');
    });
</script>