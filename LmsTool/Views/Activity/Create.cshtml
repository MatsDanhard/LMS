@model LmsTool.Models.Viewmodels.CreateActivity

<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>


@{
    ViewBag.Title = "Create";
}

<h2>Skapa en aktivitet för @Html.DisplayFor(model => model.ModulName)</h2>
<h3>Som pågår mellan @Html.DisplayFor(model => model.DisplayModulStart) - @Html.DisplayFor(model => model.DisplayModulEnd)</h3>


@using (Ajax.BeginForm("Create", "activity", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalCreate", OnSuccess = "$('close').click()" }, new { id = Model.ModulId }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfActivity, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.TypeOfActivity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfActivity, "", new { @class = "text-danger" })
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
           
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            
                @Html.TextAreaFor(model => model.Description, 10, 100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Submission, htmlAttributes: new { @class = "control-label" })
           
                <div class="checkbox">
                    @Html.EditorFor(model => model.Submission)
                    @Html.ValidationMessageFor(model => model.Submission, "", new { @class = "text-danger" })
                </div>
         
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityStart, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.ActivityStart, new { htmlAttributes =  new { @id = "dt1", @class = "form-control" } }) 
                @Html.ValidationMessageFor(model => model.ActivityStart, "", new { @class = "text-danger" })
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityEnd, htmlAttributes: new { @class = "control-label" })
            
                @Html.EditorFor(model => model.ActivityEnd, new { htmlAttributes = new { @id = "dt2", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActivityEnd, "", new { @class = "text-danger" })
           
        </div>

        <div class="form-group">
           @Html.HiddenFor(model => model.ModulId)
            @Html.ValidationMessageFor(model => model.ModulId, "", new { @class = "text-danger"})
            @Html.HiddenFor(model => model.ModulStart)@*, @id = "dt3"*@
            @Html.ValidationMessageFor(model => model.ModulStart, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ModulEnd)@*, @id = "dt4"*@
            @Html.ValidationMessageFor(model => model.ModulEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div @*class="col-md-offset-2 col-md-10"*@>
                <input type="submit" value="Skapa" class="btn btn-success btn-block" />
            </div>
        </div>
    
}



@section Scripts {
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/jQueryUI-css")
    @Scripts.Render("~/Scripts/jQueryUI")
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    //$(document).ready(function () {
        alert("i script");
        $("#dt1").datepicker({
            dateFormat: "yy-mm-dd",
            minDate: 0,
            onSelect: function () {
                var date2 = $('#dt1').datepicker('getDate');
                date2.setHours(8);
                date2.setDate(date2.getDate() + 1);
                $('#dt2').datepicker('setDate', date2);
                //sets minDate to dt1 date + 1
                $('#dt2').datepicker('option', 'minDate', date2);
                alert(dt1);
            }
        });
        $('#dt2').datepicker({
            dateFormat: "yy-mm-dd",
            onClose: function () {
                var dt1 = $('#dt1').datepicker('getDate');
                console.log(dt1);
                var dt2 = $('#dt2').datepicker('getDate');
                dt2.setHours(17);
                alert(dt2);
                if (dt2 <= dt1) {
                    var minDate = $('#dt2').datepicker('option', 'minDate');
                    $('#dt2').datepicker('setDate', minDate);
                }
            }
        });
    //});

</script>


@*<script>
    $('.modal').on('hidden.bs.modal', function () {
        $(this).removeData('bs.modal').children('.modal-content').html('');
    });
</script>*@
